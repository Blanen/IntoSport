@{Html.RenderPartial("BaseHead");}
@{
    var product = ViewData["product"] as IntoSport.Models.Product;
    var details = ViewData["details"] as List<KeyValuePair<string, string>>;
    var categorie = ViewData["categorie"] as List<IntoSport.Models.BreadCrumbs>;

    
}
@using IntoSport.Models
@model CartProduct
    <h1>
    @{
        if (categorie != null)
        {
            foreach (BreadCrumbs breadcrumbs in categorie)
            {
                <a href="/product/?categorie=@breadcrumbs.id">@breadcrumbs.naam</a> <span>&raquo;</span>

            }
            @product.naam
        }

    }
</h1>

<div class="productDetailContainerTop">
    <div class="productDetailImg">
        <img src="@product.afbeelding" style="width:100%" />
    </div>
    <div class="productDetails">
        <h1>@product.naam</h1>
        <div class="divider"></div>
        @*<form action="/cart/addToCart" method="get">*@
          @using (Html.BeginForm("addToCart", "cart", FormMethod.Get))
          {

            <div style="height:300px;overflow-y:scroll">

                @if (details != null)
                {
                    string detailName = "";

                    foreach (KeyValuePair<string, string> detail in details)
                    {
                        if (!detailName.Equals(detail.Key.ToString()))
                        {
                            detailName = @detail.Key.ToString();

                            <h4>@detailName</h4>
                            <input type="hidden" value="@detailName" name="@detailName" />
                        }
                        @Html.RadioButtonFor(model => model.DetailWaardeList, @detail.Value.ToString())@detail.Value.ToString()<br/>
                        //   <input type="radio" name="@detail.Value.ToString()" value="@detail.Value.ToString()" class=" ">@detail.Value.ToString()<br />


                    }
                }


            </div>
       
            
        
            <div class="bottomContainer">

                <p class="price">Prijs: <span>&euro; @product.prijs</span><p>
                    @{

                        if (product.korting != 0)
                        {
                            <br />
                            <br />
                            <i class="fa-2x">@product.korting<span>%</span></i>
                        }
                    }


                    <div class="rightContainer">

                        <input type="hidden" name="id" value="@product.id" />
                        <script>

                        </script>
                        <label>Aantal: @Html.EditorFor(model => model.Quantity, new { @type = "text", @Min = "0" })</label>

                       
                        <input type="submit" value="Plaats in winkelwagen" name="submit" class="btn btn-huge btn-primary">
                        
                </div>
</div>
          }
    </div>
</div>
         
<div class="productDetailContainerBottom">
    Beschrijving
    <hr/>
    <div class="productDetailDesc">
       <small>@product.beschrijving</small>
       
    </div>
</div>
@{Html.RenderPartial("BaseFooter");}